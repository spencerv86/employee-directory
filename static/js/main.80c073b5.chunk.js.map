{"version":3,"sources":["components/Header/Header.jsx","utils/API.js","components/SearchBar/SearchBar.jsx","components/SingleEmployee/SingleEmployee.jsx","components/Tablehead/Tablehead.jsx","components/Employees/Employees.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","id","Component","axios","get","SearchBar","type","placeholder","SingleEmployee","empList","console","log","src","picture","thumbnail","alt","name","first","last","cell","email","dob","date","substring","value","Tablehead","props","scope","class","onClick","handleBtnClick","Employees","state","employees","filteredEmployees","filter","sortMethod","loadEmployees","API","then","res","setState","data","results","catch","err","handleInputChange","e","target","sort","a","b","this","map","employee","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAsBeA,E,4JAlBb,WACE,OACE,gCACE,qBAAKC,UAAU,uCAAuCC,GAAG,SAAzD,SACE,sBAAKD,UAAU,YAAf,UACE,oBAAIA,UAAU,wBAAwBC,GAAG,aAAzC,gCACA,mBAAGD,UAAU,mBAAb,2GAMJ,qBAAKC,GAAG,oB,GAbKC,a,yBCAN,EACC,WACZ,OAAOC,IAAMC,IAJD,oDCoBDC,G,kKAjBb,WACE,OACE,qBAAKL,UAAU,6BAAf,SACE,+BACE,qBAAKA,UAAU,aAAf,SACE,uBACEA,UAAU,0BACVM,KAAK,OACLC,YAAY,wB,GATFL,cCmBTM,EAnBQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAExB,OADAC,QAAQC,IAAIF,GAEV,+BACE,6BACE,qBACEG,IAAKH,EAAQI,QAAQC,UACrBC,IAAI,WACJf,UAAU,cAGd,6BAAKS,EAAQO,KAAKC,MAAQ,IAAMR,EAAQO,KAAKE,OAC7C,6BAAKT,EAAQU,OACb,6BAAKV,EAAQW,QACb,6BAAKX,EAAQY,IAAIC,KAAKC,UAAU,EAAG,QAX5Bd,EAAQR,GAAGuB,QCYTC,EAhBG,SAACC,GACjB,OACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,iBACM,mBAAGC,MAAM,mBAAmBC,QAASH,EAAMI,oBAEjD,oBAAIH,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,uBC6COI,E,4MAlDbC,MAAQ,CACNC,UAAW,GACXC,kBAAmB,GACnBC,OAAQ,GACRC,WAAY,O,EAOdC,cAAgB,WACdC,IACGC,MAAK,SAACC,GAAD,OAAS,EAAKC,SAAS,CAAER,UAAWO,EAAIE,KAAKC,aAClDC,OAAM,SAACC,GACN,GAAIA,EAAK,MAAMA,M,EAIrBC,kBAAmB,SAACC,GAChB,EAAKN,SAAS,CAACN,OAAQY,EAAEC,OAAOxB,S,EAGpCM,eAAiB,SAACiB,GAChB,EAAKN,SAAS,CAACR,UAAW,EAAKD,MAAMC,UAAUgB,MAAK,SAASC,EAAGC,GAC5D,OAAOD,EAAE9B,MAAQ+B,EAAE3B,Y,uDAlBzB,WACE4B,KAAKf,kB,oBAqBP,WACE,OACE,gCACE,cAAC,EAAD,IACA,qBAAKrC,UAAU,YAAf,SACE,wBAAOA,UAAU,iCAAjB,UACE,cAAC,EAAD,CAAW8B,eAAgBsB,KAAKtB,iBAChC,uBAAO9B,UAAU,qBAAjB,SACKoD,KAAKpB,MAAMC,UAAUoB,KAAI,SAACC,GACvB,OACI,cAAC,EAAD,CAAgB7C,QAAS6C,qB,GAxCzBpD,aCUTqD,MATf,WACE,OACE,sBAAKvD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCCSwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.80c073b5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../styles/Header.css\"\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"jumbotron jumbotron-fluid text-light\" id=\"header\">\r\n          <div className=\"container\" >\r\n            <h1 className=\"display-4 text-center\" id=\"jumbo-text\">Employee Directory</h1>\r\n            <p className=\"lead text-center\">\r\n              Click on the categories to sort by heading or use the search box\r\n              to narrow your results!\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div id=\"add-line\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\nconst BASEURL = \"https://randomuser.me/api/?results=25&nat=gb,us\";\r\n\r\nexport default {\r\n  getEmployees: function () {\r\n    return axios.get(BASEURL);\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/SearchBar.css\";\r\n\r\nclass SearchBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row justify-content-center\">\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form control search-bar\"\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport Employees from \"../Employees/Employees\";\r\n\r\nconst SingleEmployee = ({ empList }) => {\r\n  console.log(empList);\r\n  return (\r\n    <tr key={empList.id.value}>\r\n      <td>\r\n        <img\r\n          src={empList.picture.thumbnail}\r\n          alt=\"Nic Cage\"\r\n          className=\"rounded\"\r\n        />\r\n      </td>\r\n      <td>{empList.name.first + \" \" + empList.name.last}</td>\r\n      <td>{empList.cell}</td>\r\n      <td>{empList.email}</td>\r\n      <td>{empList.dob.date.substring(0, 10)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default SingleEmployee;\r\n","import React from \"react\";\r\n\r\nconst Tablehead = (props) => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">Image</th>\r\n        <th scope=\"col\">\r\n          Name<i class=\"fa fa-fw fa-sort\" onClick={props.handleBtnClick}></i>\r\n        </th>\r\n        <th scope=\"col\">Phone</th>\r\n        <th scope=\"col\">Email</th>\r\n        <th scope=\"col\">DOB</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default Tablehead;\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/Employees.css\";\r\nimport API from \"../../utils/API\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SingleEmployee from \"../SingleEmployee/SingleEmployee\";\r\nimport Tablehead from \"../Tablehead/Tablehead\";\r\nclass Employees extends Component {\r\n  state = {\r\n    employees: [],\r\n    filteredEmployees: [],\r\n    filter: \"\",\r\n    sortMethod: \"asc\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadEmployees();\r\n  }\r\n\r\n  loadEmployees = () => {\r\n    API.getEmployees()\r\n      .then((res) => this.setState({ employees: res.data.results }))\r\n      .catch((err) => {\r\n        if (err) throw err;\r\n      });\r\n  };\r\n\r\n  handleInputChange= (e) => {\r\n      this.setState({filter: e.target.value})\r\n  };\r\n\r\n  handleBtnClick = (e) => {\r\n    this.setState({employees: this.state.employees.sort(function(a, b) {\r\n        return a.email - b.value;\r\n    })})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchBar/>\r\n        <div className=\"container\">\r\n          <table className=\"table table-striped table-dark\">\r\n            <Tablehead handleBtnClick={this.handleBtnClick}/>\r\n            <tbody className=\"align-items-center\">\r\n                {this.state.employees.map((employee) => {\r\n                    return (\r\n                        <SingleEmployee empList={employee} />\r\n                    )\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Employees;\r\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from \"./components/Header/Header\";\nimport Employees from \"./components/Employees/Employees\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Employees />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}